{"version":3,"sources":["components/Imagecard.js","components/ImageSearch.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAwCeA,EAtCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,sBAAKC,UAAW,6CAAhB,UACA,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAClCH,UAAU,WACV,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,QAElB,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAIb,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,uBAAkBV,UAAU,6FAA5B,cAEAS,IAFWC,YCAVC,EA5BK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAQlC,OACI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SAPO,SAACC,GAClBA,EAAEC,iBACFN,EAAWE,IAKuBd,UAAU,kBAAxC,SACI,sBAAKA,UAAU,oDAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QACvCrB,UAAU,sHAGVsB,KAAK,OAAOC,YAAY,iBACxB,wBAAQvB,UAAU,sIAECsB,KAAK,SAFxB,4BCmBLE,MAjCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAgBb,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAC0BJ,EAD1B,kCAEJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,CAACX,IAGH,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAc,SAACE,GAAD,OAAUgB,EAAQhB,OAE3Ca,GAA+B,IAAlBF,EAAOkB,QAAgB,oBACtC3C,UAAU,qCAD4B,8BAGpC2B,EAAY,oBAAI3B,UAAU,qCAAd,8BACX,qBAAKA,UAAU,yBAAf,SACCyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aCnBjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3cd12d10.chunk.js","sourcesContent":["\r\n\r\nconst ImageCard = ({ image }) => {\r\n    const tags = image.tags.split(',');\r\n\r\n    return (\r\n        <div className= 'max-w-sm rounded overflow-hidden shadow-lg'>\r\n        <img src={image.webformatURL} alt='' \r\n        className='w-full' />\r\n        <div className='px-6 py-4'>\r\n          <div className='font-bold text-purple-500 text-xl mb-2'>\r\n            Photo by {image.user}\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              <strong>Views: </strong>\r\n              {image.views}\r\n            </li>\r\n            <li>\r\n              <strong>Downloads: </strong>\r\n              {image.downloads}\r\n            </li>\r\n            <li>\r\n              <strong>Likes: </strong>\r\n              {image.likes}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='px-6 py-4'>\r\n          {tags.map((tag, index) => (\r\n              <span key={index} className='inline-block bg-gray-200 rounded-full px-3 py-1\r\n                text-sm font-semibold text-gray-700 mr-2'>\r\n            #{tag}\r\n          </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard;","import { useState } from \"react\";\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchText(text)\r\n    }\r\n\r\n    return (\r\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\r\n            <form onSubmit={handleSubmit} className='w-full max-w-sm'>\r\n                <div className='flex items-center border-b-2 border-teal-500 py-2'>\r\n                    <input onChange={e => setText(e.target.value)}\r\n                    className='appearance-none bg-transparent\r\n                    border-none w-full text-gray-700 mr-3 py-1\r\n                    px-2 leading-tight focus:outline-none'\r\n                    type='text' placeholder='Search Image' />\r\n                    <button className='flex-shrink-0 bg-blue-500 hover:bg-blue-700\r\n                    border-blue-500 hover:border-blue-700 text-sm border-4 text-white\r\n                    py-1 px-2 rounded' type='submit'>\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch;","import React, { useState, useEffect } from 'react'\nimport ImageCard from './components/Imagecard';\nimport ImageSearch from './components/ImageSearch';\n\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.\n    REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false)\n    })\n    .catch(err => console.log(err));\n  }, [term]);\n\n  return (\n   <div className=\"container mx-auto\">\n     <ImageSearch searchText = {(text) => setTerm(text)} />\n\n     {!isLoading && images.length === 0 && <h1 \n     className='text-center text-4xl mx-auto mt-32'>Images not found</h1>}\n\n     { isLoading ? <h1 className='text-center text-4xl mx-auto mt-32'>Image Loading!!!</h1>\n      : <div className='grid grid-cols-3 gap-5'>\n        {images.map(image =>(\n          <ImageCard key={image.id} image={image} />\n        ))}\n     </div>}\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}